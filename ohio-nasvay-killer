local ImGui = loadstring(game:HttpGet('https://github.com/depthso/Roblox-ImGUI/raw/main/ImGui.lua'))()
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local NoBoxes = true
local AutoPickup = false
--// Window 
local Window = ImGui:CreateWindow({
	Title = "НасвайСОФТ | Version 1.42",
	Size = UDim2.new(0, 350, 0, 370),
	Position = UDim2.new(0.5, 0, 0, 70)
})
Window:Center()

local GameTab = Window:CreateTab({
	Name = "Game"
})

function contains(word, tofind)
    if string.find(word, tofind) then
        return true
    end
end

function check_in_world(Path, value, value2)
	for i, v in pairs(Path:GetChildren()) do
		if contains(v.Name, value) then
			if v:FindFirstChildOfClass('Model') then
				if value2 then
					for j, k in pairs(v:FindFirstChildOfClass('Model'):GetDescendants()) do
						if k:IsA("ProximityPrompt") then
							local Primary = v:FindFirstChildOfClass('Model').PrimaryPart
							if Primary then
								return Primary
							end
						end
					end
				else
					local Primary = v:FindFirstChildOfClass('Model').PrimaryPart
					if Primary then
						return Primary
					end
				end
			end
		end
	end
end
function remove_cooldown()
	for n, k in pairs(workspace.GetDescendants()) do
		if k:IsA('ProximityPrompt') then
			k.HoldDuration = 0
		end 
	end
end
GameTab:Label({
	Text = "Safe/Chest TP"
})
GameTab:Separator()
GameTab:Button({
	Text = "Teleport to any safe",
	Callback = function(self)
		local Primary = check_in_world(workspace.Game.Entities, "Safe", "ProximityPrompt")
		if Primary then
			remove_cooldown()
			local Character = Player.Character
			local RootPart = Character.PrimaryPart
			RootPart.CFrame = Primary.CFrame + Vector3.new(0, 5, 0)
		end
	end,
})
GameTab:Button({
	Text = "Teleport to any chest",
	Callback = function(self)
		local Primary = check_in_world(workspace.Game.Entities, "Chest", "ProximityPrompt")
		if Primary then
			remove_cooldown()
			local Character = Player.Character
			local RootPart = Character.PrimaryPart
			RootPart.CFrame = Primary.CFrame + Vector3.new(0, 5, 0)
		end
	end,
})
GameTab:Separator()
GameTab:Label({
	Text = "Positions teleport"
})

GameTab:Button({
	Text = "Teleport to Black market",
	Callback = function(self)
		local Character = Player.Character
		local RootPart = Character.PrimaryPart
		RootPart.CFrame = workspace.BlackMarket.Dealer.PrimaryPart.CFrame + Vector3.new(0, 5, 0)
	end,
})

GameTab:Label({
	Text = "Item teleport"
})
GameTab:Separator()
GameTab:Button({
	Text = "Remove cooldown(optional)",
	Callback = function(self)
		remove_cooldown()
	end,
})

GameTab:Checkbox({
	Label = "No boxes",
	Value = true,
	Callback = function(self, Value)
		NoBoxes = Value
	end,
})
GameTab:Checkbox({
	Label = "Auto pickup",
	Value = false,
	Callback = function(self, Value)
		AutoPickup = Value
	end,
})

GameTab:Button({
	Text = "Teleport to a random item",
	Callback = function(self)
		-- Get all the children (items) in the ItemPickup folder
		local items = workspace.Game.Entities.ItemPickup:GetChildren()
		
		-- Filter out "Box" items if NoBoxes is enabled
		local filteredItems = {}
		for i, v in pairs(items) do
			local name = v:GetAttribute('itemName')
			if NoBoxes then
				if not contains(name, "Box") then
					table.insert(filteredItems, v)
				end
			else
				table.insert(filteredItems, v)
			end
		end
		
		-- Select a random item from the filtered list
		local randomIndex = math.random(1, #filteredItems)
		local selectedItem = filteredItems[randomIndex]
		
		-- Teleport the player to the selected item
		if selectedItem then
			remove_cooldown()
			local Character = Player.Character
			local RootPart = Character.PrimaryPart
			if AutoPickup then
				local ClickDetector = selectedItem:FindFirstChildOfClass('ClickDetector')
				--ClickDetector.MaxActivationDistance = math.huge
				fireclickdetector(ClickDetector)
			end
			RootPart.CFrame = selectedItem.PrimaryPart.CFrame + Vector3.new(0, 5, 0)
		end
	end,
})



