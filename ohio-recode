local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/topitbopit/dollarware/main/library.lua'))()

local Load = require(game:GetService("ReplicatedStorage").devv).load
local Signal = require(game:GetService("ReplicatedStorage").devv.client.Helpers.remotes.Signal)
local v3item = game:GetService("ReplicatedStorage").devv.client.Objects.v3item
local v4item = require(v3item)
local v3items = Load('v3items')

local melee = Load('v3item').melee
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local v3Inventory = require(v3item.modules.inventory)
local BaseItem = require(v3item.bin.baseItem)
local SafeZone = game:GetService("Workspace").SecretEggSpawns.SecretEgg3.CFrame

local Replicator = require(game:GetService("ReplicatedStorage").devv.client.Helpers.objectProperties.ClientReplicator)

local Items = v3Inventory.items
local Fists

local BalloonAlways = false
local SafeMode, SafeHeal, SafeMin = false, false, 100
local Farm = false
local FarmSafeEnabled = true
local LockerEnabled = true
local FarmTypes = {
    ATM = false,
    Register = false,
    Fly = false,
}
local PlayerMethods = {
    KillAura = false,
    AutoStomp = false,
    Fly = false,
    Target = nil,
    TargetKill = false,
    AutoLoot = false,
}
local Nav = {
    Flying = false,
    Forward = false,
    Backward = false,
    Left = false,
    Right = false
}

local Priority = {
    "Military",
    "Vest",
    "Keycard",
    "Marker",
    "Barrett",
    'Gold',
    'Present',
    'Key',
    'Money',
    'RPG',
    'Saiga',
    'Scar',
    'Block',
    'M249',
    'Hoverboard',
    'Gravity',
    'Dragunov',
    'Void',
    'Dark',
    'C4',
    'C5',
    'Santa',
    'Acid',
    'AS Val',
    'AUG',
    'Python',
    'RPK',
    'Fn',
    'P90',
    'Diamond',
    'Tactical'
}

local ValuableAuto, ValuableSafe = false, false

local function getCurrentCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

function GetItem(Name)
    for _, item in pairs(Items) do
        if item.name == Name then
            return item
        end
    end
end

function CollectMoney(rootPart)
    local Cash = workspace.Game.Entities.CashBundle
    local collected = {}

    for _, Dollar in pairs(Cash:GetChildren()) do
        if Dollar and Dollar.PrimaryPart then
            local dist = (Dollar.PrimaryPart.Position - rootPart.Position).Magnitude
            if dist <= 20 then
                table.insert(collected, Dollar)
            end
        end
    end

    for _, Dollar in ipairs(collected) do
        if Dollar and Dollar.PrimaryPart then
            rootPart.CFrame = Dollar.PrimaryPart.CFrame
            wait(0.5)
        end
    end
end

function Process(IsSafeZone, Params)
    if Fists then
        local character = getCurrentCharacter()
        local humanoid = character:FindFirstChild("Humanoid")
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        local atms = workspace.Game.Props.ATM
        local registers = workspace.Game.Props.CashRegister
        if humanoid and rootPart and humanoid.Health >= 100 then
            for _, atm in pairs(atms:GetChildren()) do
                if Params.ATM then
                    local screen = atm:FindFirstChild("Screen")
                    local atmPrimary = atm.PrimaryPart

                    if screen and atmPrimary then
                        atmPrimary.CanCollide = false

                        if screen.Color ~= Color3.fromRGB(255, 0, 0) then
                            local atmLook = atmPrimary.CFrame.LookVector
                            local atmRight = atmPrimary.CFrame.RightVector
                            local frontPosition = atmPrimary.Position - (atmLook * 3)
                            local lookAtCFrame = CFrame.new(frontPosition, atmPrimary.Position)
                            local cam = workspace.CurrentCamera

                            repeat
                                cam.CFrame = CFrame.new(cam.CFrame.Position, atmPrimary.Position)

                                rootPart.CFrame = lookAtCFrame
                                rootPart.CFrame = atmPrimary.CFrame

                                local _, Equipped = v4item.GetEquipped(player)
                                if not Equipped then
                                    BaseItem.SetEquipped(Fists, true, false, true)
                                    wait(0.5)
                                end

                                task.wait(0.1)
                                melee.meleeHitreg(Fists, "meleepunch")
                                melee.onMeleeHit(player, "meleepunch")
                            until not screen or screen.Color == Color3.fromRGB(255, 0, 0) or humanoid.Health < 100

                            if screen and screen.Color == Color3.fromRGB(255, 0, 0) then
                                CollectMoney(rootPart)
                                task.wait(0.5)
                            end
                        end
                    end
                end
                if humanoid.Health < 100 then
                    break
                end
            end
            for _, register in pairs(registers:GetChildren()) do
                pcall(function()
                    if Params.Register and register.CashDrawer then
                        local weld = register.CashDrawer.WeldConstraint
                        local atmPrimary = register.PrimaryPart

                        if weld and atmPrimary then
                            atmPrimary.CanCollide = false

                            if weld.Enabled then
                                local atmLook = atmPrimary.CFrame.LookVector
                                local atmRight = atmPrimary.CFrame.RightVector
                                local frontPosition = atmPrimary.Position - (atmLook * 3)
                                local lookAtCFrame = CFrame.new(frontPosition, atmPrimary.Position)
                                local cam = workspace.CurrentCamera

                                repeat
                                    cam.CFrame = CFrame.new(cam.CFrame.Position, atmPrimary.Position)

                                    rootPart.CFrame = lookAtCFrame
                                    rootPart.CFrame = atmPrimary.CFrame

                                    local _, Equipped = v4item.GetEquipped(player)
                                    if not Equipped then
                                        BaseItem.SetEquipped(Fists, true, false, true)
                                        wait(0.5)
                                    end

                                    task.wait(0.1)
                                    melee.meleeHitreg(Fists, "meleepunch")
                                    melee.onMeleeHit(player, "meleepunch")
                                until not weld or weld.Enabled == false or humanoid.Health < 100

                                if weld and weld.Enabled == false then
                                    task.wait(1)
                                    CollectMoney(rootPart)
                                    task.wait(0.5)
                                end
                            end
                        end
                    end
                end)
                if humanoid.Health < 100 then
                    break
                end
            end
            if IsSafeZone then
                rootPart.CFrame = SafeZone
            end
        end
    end
end
function Seek()
    local character = getCurrentCharacter()
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local Folder = workspace.Game.Entities.ItemPickup
    local Trigger1 = workspace.MilitaryRobbery.MilitaryTrigger
    local Trigger2 = workspace.ArmoryRobbery.ArmoryTrigger

    local allPickups = Folder:GetChildren()

    local partsIn1 = workspace:GetPartBoundsInBox(Trigger1.CFrame, Trigger1.Size)
    local partsIn2 = workspace:GetPartBoundsInBox(Trigger2.CFrame, Trigger2.Size)

    local inTriggerSet = {}
    for _, p in ipairs(partsIn1) do
        inTriggerSet[p] = true
    end
    for _, p in ipairs(partsIn2) do
        inTriggerSet[p] = true
    end

    for _, pickup in ipairs(allPickups) do
        local part = pickup.PrimaryPart
        if part then
            if inTriggerSet[part] then
                continue
            end

            local prompt = part:FindFirstChildOfClass("ProximityPrompt", true)
            if prompt then
                for _, keyword in ipairs(Priority) do
                    if prompt.ObjectText:find(keyword) or prompt.ObjectText == keyword then
                        if prompt.ObjectText:find('Vest') or prompt.ObjectText:find('Key') or prompt.ObjectText:find('Keycard') then
                            if GetItem(prompt.ObjectText) then
                                continue
                            end
                        end
                        rootPart.CFrame = part.CFrame
                        return prompt
                    end
                end
            end
        end
    end
end
function StateBalloon(Value)
    local Balloon = require(v3item.bin.Holdable.modules.controller.modules.itemFuncs.Balloon)
    local item = {
        item = {
            multiplier = 0.65
        }
    }
    local method = if Value then 'onEquipped' else 'onUnequipped'
    Balloon[method](item)
end
function SeekSC()
    local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
    if not rootPart then return end
    
    local safesAndChests = {}
    local searchFolders = {
        workspace.Game.Entities,
    }

    for _, folder in ipairs(searchFolders) do
        for _, obj in ipairs(folder:GetDescendants()) do
            if obj:IsA("Model") and (obj.Name:find("Safe") or obj.Name:find("Chest")) then
                local prompt = obj:FindFirstChild("ProximityPrompt", true)
                if prompt then
                    table.insert(safesAndChests, {
                        model = obj,
                        prompt = prompt,
                        primary = obj.PrimaryPart
                    })
                end
            end
        end
    end
    
    return safesAndChests
end

function InitAll()
    task.spawn(function()
        local before = CFrame.new(0, 0, 0)
        local safeModeActive = false
        while task.wait(0.1) do
            Fists = GetItem('Fists')
            if BalloonAlways then
                pcall(StateBalloon, true)
            end
            if SafeMode and not safeModeActive then
                safeModeActive = true
                task.spawn(function()
                    pcall(function()
                        local character = getCurrentCharacter()
                        local humanoid = character:FindFirstChild("Humanoid")
                        local rootPart = character:FindFirstChild("HumanoidRootPart")

                        if not(humanoid and rootPart) then return end

                        if humanoid.Health <= SafeMin then
                            before = rootPart.CFrame
                            rootPart.CFrame = SafeZone

                            while humanoid.Health <= SafeMin and humanoid.Health > 0 do
                                task.wait(0.1)
                                humanoid = character:FindFirstChild("Humanoid")
                                if not humanoid then break end

                                if SafeHeal and Replicator.Get(player, 'knocked') == false then
                                    local Bandage = GetItem('Bandage')
                                    local Before, BeforeItem = v4item.GetEquipped(player)
                                    if Bandage then
                                        Signal.FireServer("equip", Bandage.guid)
                                        Signal.FireServer("useConsumable", Bandage.guid)
                                        Signal.FireServer("removeItem", Bandage.guid)
                                        if BeforeItem then
                                            Signal.FireServer("equip", BeforeItem.guid)
                                        end
                                    else
                                        Signal.InvokeServer('attemptPurchase', 'Bandage')
                                    end
                                end
                            end

                            if character:IsDescendantOf(workspace) and rootPart then
                                rootPart.CFrame = before
                            end
                        else
                            before = rootPart.CFrame
                        end
                    end)
                    safeModeActive = false
                end)
            end
        end
    end)
    task.spawn(function()
        while task.wait() do
            if player.PlayerGui.Backpack.Enabled == true then
                player.PlayerGui.Backpack.Holder.Locker.Visible = LockerEnabled
            end
        end
    end)
    task.spawn(function()
        local UIS = game:GetService("UserInputService")
        local Camera = workspace.CurrentCamera
        local Root
        
        UIS.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.Keyboard then
                 Root = getCurrentCharacter() and getCurrentCharacter():FindFirstChild("HumanoidRootPart")
                if not Root then return end
                if Input.KeyCode == Enum.KeyCode.W then
                    Nav.Forward = true
                elseif Input.KeyCode == Enum.KeyCode.S then
                    Nav.Backward = true
                elseif Input.KeyCode == Enum.KeyCode.A then
                    Nav.Left = true
                elseif Input.KeyCode == Enum.KeyCode.D then
                    Nav.Right = true
                end
            end
        end)

        UIS.InputEnded:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.Keyboard then
                if Input.KeyCode == Enum.KeyCode.W then
                    Nav.Forward = false
                elseif Input.KeyCode == Enum.KeyCode.S then
                    Nav.Backward = false
                elseif Input.KeyCode == Enum.KeyCode.A then
                    Nav.Left = false
                elseif Input.KeyCode == Enum.KeyCode.D then
                    Nav.Right = false
                end
            end
        end)

        Camera:GetPropertyChangedSignal("CFrame"):Connect(function()
            if Nav.Flying then
                local character_ = getCurrentCharacter()
                local RootPart = character_:FindFirstChild("HumanoidRootPart")
                if RootPart then
                    RootPart.CFrame = CFrame.new(RootPart.CFrame.Position, RootPart.CFrame.Position + Camera.CFrame.LookVector)
                end
            end
        end)

        local function GetPlayer(radius)
            local nearestPlayer = nil
            local shortestDistance = radius
            local character_ = getCurrentCharacter()
            local rootPart = character_:FindFirstChild("HumanoidRootPart")
            if not rootPart then return end
            
            for _, player_ in ipairs(game:GetService("Players"):GetPlayers()) do
                local character = player_.Character
                if character and player_ ~= player and Replicator.Get(player_, 'knocked') == false then
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        local distance = (humanoidRootPart.Position - rootPart.Position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            nearestPlayer = player_
                        end
                    end
                elseif character and player_ ~= player and Replicator.Get(player_, 'knocked') == true then
                    if PlayerMethods.AutoStomp then
                        Signal.FireServer("stomp", player_)
                    end
                end
            end

            return nearestPlayer
        end
        while task.wait() do
            local character_ = getCurrentCharacter()
            local RootPart = character_:FindFirstChild("HumanoidRootPart")
            if RootPart then
                RootPart.Anchored = PlayerMethods.Fly
            end
            if PlayerMethods.KillAura then
                local __player = GetPlayer(50)
                if __player then
                    local Table = {
                        ["hitPlayerId"] = __player.UserId,
                        ["meleeType"] = 'meleemegapunch'
                    }
                    Signal.FireServer("meleeItemHit", "player", Table)
                end
            end
            if PlayerMethods.Fly then
                local Speed = 3
                local RootPart = getCurrentCharacter():WaitForChild("HumanoidRootPart")
                if not RootPart then continue end

                if Nav.Flying then
                    if Nav.Forward then
                        RootPart.CFrame = RootPart.CFrame + (Camera.CFrame.LookVector * Speed)
                    end
                    if Nav.Backward then
                        RootPart.CFrame = RootPart.CFrame + (-Camera.CFrame.LookVector * Speed)
                    end
                    if Nav.Left then
                        RootPart.CFrame = RootPart.CFrame + (-Camera.CFrame.RightVector * Speed)
                    end
                    if Nav.Right then
                        RootPart.CFrame = RootPart.CFrame + (Camera.CFrame.RightVector * Speed)
                    end
                end
            end
        end
    end)
    task.spawn(function()
        while task.wait() do
            if ValuableAuto then
                local prompt = Seek()
                if prompt then
                    fireproximityprompt(prompt)
                else
                    if ValuableSafe then
                        local character = getCurrentCharacter()
                        local rootPart = character:FindFirstChild("HumanoidRootPart")
                        if not (rootPart) then return end
                        rootPart.CFrame = SafeZone
                    end
                end
            end
        end
    end)
    task.spawn(function()
        while wait() do
            if PlayerMethods.Target then
                if PlayerMethods.TargetKill then
                    local Player = game:GetService('Players')[PlayerMethods.Target]
                    if Player then
                        local Character = Player.Character or Player.CharacterAdded:Wait()
                        if Character then
                            local RootPart = Character:FindFirstChild('HumanoidRootPart')
                            if RootPart then
                                local ForceField = Character:FindFirstChild('ForceField')
                                if not ForceField then
                                    local SelfCharacter = getCurrentCharacter()
                                    if SelfCharacter then
                                        local ForceField = SelfCharacter:FindFirstChild('ForceField')
                                        local RootPart = SelfCharacter:FindFirstChild('HumanoidRootPart')
                                        if RootPart and not ForceField then
                                            local Table = {
                                                ["hitPlayerId"] = Player.UserId,
                                                ["meleeType"] = 'meleemegapunch'
                                            }
                                            RootPart.CFrame = Character.HumanoidRootPart.CFrame
                                            local _, Equipped = v4item.GetEquipped(player)
                                            if not Equipped then
                                                BaseItem.SetEquipped(Fists, true, false, true)
                                                wait(0.5)
                                            end
                                            Signal.FireServer("meleeItemHit", "player", Table)
                                            Signal.FireServer("stomp", Player)
                                        end
                                    end
                                end 
                            end
                        end
                    end
                end
            end
        end
    end)
    task.spawn(function()
        while wait() do
            if PlayerMethods.AutoLoot then
                pcall(function()
                    local lockpick = GetItem('Lockpick')
                    if not lockpick then 
                        Signal.InvokeServer('attemptPurchase', 'Lockpick')
                        return 
                    end
    
                    local lootables = SeekSC()
                    if #lootables > 0 then
                        for _, lootable in ipairs(lootables) do
                            if lootable.primary then
                                local char = getCurrentCharacter()
                                if char then
                                    local root = char:FindFirstChild('HumanoidRootPart')
                                    if root then
                                        root.CFrame = lootable.primary.CFrame + Vector3.new(0, 3, 0)
                                        lootable.prompt.HoldDuration = 0
                                        wait(1) 
                                        repeat
                                            task.wait()
                                            fireproximityprompt(lootable.prompt)
                                        until lootable.prompt.Parent == nil or not lootable.prompt
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end
    end)
    while task.wait() do
        if Farm then
            Process(FarmSafeEnabled, FarmTypes)
        end
    end
end

local window = ui.newWindow({text = "Ohio killer ReCode | v6.5", resize = true})

local farm_menu = window:addMenu({text = 'Farm'})
local farm_section = farm_menu:addSection({text = 'Money Farm', side = 'left'})

farm_section:addToggle({text = 'ATMs'}, function(val)
    FarmTypes.ATM = val
end)

farm_section:addToggle({text = 'Registers'}, function(val)
    FarmTypes.Register = val
end)

farm_section:addToggle({text = 'Safe mode'}, function(val)
    FarmSafeEnabled = val
end):setTooltip("Teleports you to a safe zone after farming all available machines.")

farm_section:addToggle({text = 'Toggle Farm'}, function(val)
    Farm = val
end)

farm_section:addLabel({text = 'NOTE: To disable, press ESC and turn it off.\nSometimes may bug ATMs.', dim = true})

local player_menu = window:addMenu({text = 'Player'})

local balloon_section = player_menu:addSection({text = 'Fake Balloon', side = 'left'})
balloon_section:addToggle({text = 'Enabled'}, function(val)
    task.spawn(StateBalloon, val)
end)

balloon_section:addToggle({text = 'Always'}, function(val)
    BalloonAlways = val
end)

local safemode_section = player_menu:addSection({text = 'Safe Mode', side = 'left'})
safemode_section:addLabel({text = 'TPs to safe zone on low HP.', dim = true})

safemode_section:addSlider({text = 'Minimum Health', min = 10, max = 100, value = 100, step = 5}, function(val)
    SafeMin = val
end)

safemode_section:addToggle({text = 'Auto Heal'}, function(val)
    SafeHeal = val
end):setTooltip("Automatically buys and uses bandages when in safe mode.")

safemode_section:addToggle({text = 'Enabled'}, function(val)
    SafeMode = val
end)

local locker_section = player_menu:addSection({text = 'Locker', side = 'left'})
locker_section:addLabel({text = 'NOTE: Shows backpack locker', dim = true})
locker_section:addToggle({text = 'Enabled'}, function(val)
    LockerEnabled = val
end)

local combat_section = player_menu:addSection({text = 'Combat', side = 'right'})
combat_section:addLabel({text = 'NOTE: Equip fists for Kill Aura.', dim = true})
combat_section:addToggle({text = 'Kill Aura'}, function(val)
    PlayerMethods.KillAura = val
end)

combat_section:addToggle({text = 'Auto Stomp'}, function(val)
    PlayerMethods.AutoStomp = val
end)

local fly_section = player_menu:addSection({text = 'Movement', side = 'right'})
local FlyBeforePos
fly_section:addLabel({text = 'NOTE: You are invisible to others while flying.', dim = true})
fly_section:addToggle({text = 'Fly'}, function(val)
    task.spawn(function()
        local Value = val
        local character = getCurrentCharacter()
        if not character then return end
            
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end
            
        if Value then
            FlyBeforePos = humanoidRootPart.CFrame
            humanoidRootPart.CFrame = SafeZone

            task.wait(0.1)
            Nav.Flying = true
            PlayerMethods.Fly = true
            
            humanoidRootPart.CFrame = FlyBeforePos
        else
            Nav.Flying = false
            PlayerMethods.Fly = false
        end
    end)
end)

local teleport_section = player_menu:addSection({text = "Teleport", side = "right"})
local textbox = teleport_section:addTextbox({text = 'Name'})

textbox:bindToEvent('onFocusLost', function(input_text)
    local players = game:GetService("Players"):GetPlayers()
    local input_lower = input_text:lower()
    local matches = {}

    for _, player in ipairs(players) do
        local player_name = player.Name
        if player_name:lower():sub(1, #input_lower) == input_lower then
            table.insert(matches, player_name)
        end
    end

    if #matches >= 1 then
        textbox:setText(matches[1])
    end
end)
teleport_section:addToggle({text = 'Kill'}, function(val)
    PlayerMethods.Target = textbox:getText()
    task.spawn(function()
        local Value = val
        local character = getCurrentCharacter()
        if not character then return end
            
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end
            
        PlayerMethods.TargetKill = Value
    end)
end)
teleport_section:addButton({text = "Teleport"}, function() 
    PlayerMethods.Target = textbox:getText()
    if PlayerMethods.Target then
        local Player = game:GetService('Players')[PlayerMethods.Target]
        if Player then
            local Character = Player.Character or Player.CharacterAdded:Wait()
            if Character then
                local RootPart = Character:FindFirstChild('HumanoidRootPart')
                if RootPart then
                    local SelfCharacter = getCurrentCharacter()
                    if SelfCharacter then
                        local ForceField = SelfCharacter:FindFirstChild('ForceField')
                        local RootPart = SelfCharacter:FindFirstChild('HumanoidRootPart')
                        if RootPart and not ForceField then
                            RootPart.CFrame = Character.HumanoidRootPart.CFrame
                        end
                    end 
                end
            end
        end 
    end
end)


local valuables_menu = window:addMenu({text = 'Valuables'})
local auto_valuable_section = valuables_menu:addSection({text = 'Auto Collect Valuable', side = 'left'})

auto_valuable_section:addLabel({text = 'Auto TP to and collect valuable items.', dim = true})
auto_valuable_section:addButton({text = "Find Valuable"}, function() Seek() end)

auto_valuable_section:addToggle({text = 'Safe Mode'}, function(val)
    ValuableSafe = val
end):setTooltip("After collecting all valuable items, teleport to a safe zone.")

auto_valuable_section:addToggle({text = 'Most Valuable Only'}, function(val)
    if val then
        Priority = { "Marker", 'Void', 'Dark', 'C5', 'Santa' }
    else
        Priority = {
            "Military",
            "Vest",
            "Keycard",
            "Marker",
            "Barrett",
            'Gold',
            'Present',
            'Key',
            'Money',
            'RPG',
            'Saiga',
            'Scar',
            'Block',
            'M249',
            'Hoverboard',
            'Gravity',
            'Dragunov',
            'Void',
            'Dark',
            'C4',
            'C5',
            'Santa',
            'Acid',
            'AS Val',
            'AUG',
            'Python',
            'RPK',
            'Fn',
            'P90',
            'Diamond',
            'Tactical'
        }
    end
end):setTooltip("Filters the auto-collector to only pick up the rarest items.")

auto_valuable_section:addToggle({text = 'Auto'}, function(val)
    ValuableAuto = val
end)

local teleport_section = valuables_menu:addSection({text = 'Teleport to Objects', side = 'right'})

teleport_section:addButton({text = 'Goto Airdrop'}, function()
    task.spawn(function()
        local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
        if not rootPart then return end
        local airdrops = workspace.Game.Airdrops
        local drop = nil
        for i, v in pairs(airdrops:GetChildren()) do
            drop = v
        end
        if drop and drop.PrimaryPart then
            rootPart.CFrame = drop.PrimaryPart.CFrame
        end
    end)
end)

teleport_section:addButton({text = 'Goto Safe / Chest'}, function()
    local lootables = SeekSC()
    if #lootables > 0 then
        local char = getCurrentCharacter()
        if char then
            local root = char:FindFirstChild('HumanoidRootPart')
            if root then
                root.CFrame = lootables[1].primary.CFrame + Vector3.new(0, 3, 0)
            end
        end
    end
end)

teleport_section:addButton({text = 'Goto Treasure Marker'}, function()
    task.spawn(function()
        local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
        if not rootPart then return end
        local Path = workspace.Game.Local.Debris.TreasureMarker
        if Path then
            rootPart.CFrame = Path.CFrame
            for _, o in pairs(Path:GetChildren()) do
                if o:IsA('ProximityPrompt') then
                    o.HoldDuration = 0
                end
            end
        end
    end)
end)

teleport_section:addToggle({text = 'Auto'}, function(val)
    task.spawn(function()
        PlayerMethods.AutoLoot = val
    end)
end)


local other_utils_section = valuables_menu:addSection({text = 'Other Utilities', side = 'right'})
other_utils_section:addButton({text = 'Remove Cooldowns'}, function()
    for _, o in pairs(workspace:GetDescendants()) do
        if o:IsA('ProximityPrompt') then
            o.HoldDuration = 0
        end
    end
end):setTooltip("Sets the hold duration for all ProximityPrompts in the game to 0.")

other_utils_section:addButton({text = 'Sell Equipped'}, function()
    task.spawn(function()
        local _, item = v4item.GetEquipped(player)
        if item then
            Signal.FireServer("sellItem", item)
        end
    end)
end)

local travel_menu = window:addMenu({text = 'Travel'})
local places_section = travel_menu:addSection({text = 'Places', side = 'left'})
local dropped_section = travel_menu:addSection({text = 'Dropped Items', side = 'right'})

local destinations = {
    ["Police Station"] = workspace.ArmoryRobbery.ArmoryTrigger,
    ["Military Base"] = workspace.MilitaryRobbery.MilitaryTrigger,
    ["Bank"] = workspace.BankRobbery.BankAlarm,
    ["Armory"] = workspace.LandmarkNodes.Nodes.armory1,
    ["Safe Zone"] = workspace.SecretEggSpawns.SecretEgg3,
    ['Jewelry'] = workspace.GemRobbery.AlarmLights,
    ['Hospital'] = CFrame.new(1168.04468, 35.0443974, -972.782654, 0, 0, -1, 0, 1, 0, 1, 0, 0)
}

for dest_name, dest_obj in pairs(destinations) do
    places_section:addButton({text = dest_name, style = 'large'}, function()
        local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
        if not rootPart then return end
        
        if typeof(dest_obj) == 'CFrame' then
            rootPart.CFrame = dest_obj
        else
            rootPart.CFrame = dest_obj.CFrame
        end
    end)
end

dropped_section:addButton({text = "Ammo Box", style = 'large'}, function()
    local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
    if not rootPart then return end
    local destination = workspace.Game.Local.droppables["Ammo Box"]
    if destination and destination.PrimaryPart then
        rootPart.CFrame = destination.PrimaryPart.CFrame
    end
end)

dropped_section:addButton({text = "Money Printer", style = 'large'}, function()
    local rootPart = getCurrentCharacter() and getCurrentCharacter():FindFirstChild('HumanoidRootPart')
    if not rootPart then return end
    local destination = workspace.Game.Local.droppables["Money Printer"]
    if destination and destination.PrimaryPart then
        rootPart.CFrame = destination.PrimaryPart.CFrame
    end
end)

InitAll()
