
print('open-source HOKJHA')  --// Services 
local RunService: RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local IsStudio = RunService:IsStudio()

local Speed = 1000
local Turbo = 11.3

local self = game.Players.LocalPlayer

--// Fetch library
local ImGui
if IsStudio then
	ImGui = require(ReplicatedStorage.ImGui)
else
	local SourceURL = 'https://raw.githubusercontent.com/BrutalBonk/rbx/refs/heads/main/2'
	ImGui = loadstring(game:HttpGet(SourceURL))()
end

--// Window 
local Window = ImGui:CreateWindow({
	Title = "Brookhaven troll | HOKJHa",
	Size = UDim2.new(0, 350, 0, 370),
	Position = UDim2.new(0.5, 0, 0, 70)
})
local Player = game:GetService('Players').LocalPlayer

Window:Center()

local CarHack = Window:CreateTab({
	Name = "CAR"
})

local Tab = CarHack:CollapsingHeader({
	Title = "Speed"
})

Tab:Slider({
	Label = "Max Speed",
	Format = "%.d/%s",
	Value = 1000,
	MinValue = 0,
	MaxValue = 10000,
	ReadOnly = false,

	Callback = function(self, Value)
		Speed = Value
	end,
})
Tab:Slider({
	Label = "Turbo",
	Format = "%.d/%s",
	Value = 11.3,
	MinValue = 0,
	MaxValue = 1000,
	ReadOnly = false,

	Callback = function(self, Value)
		Turbo = Value
	end,
})
Tab:Button({
	Text = 'Load',
	Callback = function()
		for i, v in pairs(workspace.Vehicles:GetChildren()) do
			if string.find(v.Name, self.Name) then
				for k, j in pairs(v:GetDescendants()) do
					if j:IsA('VehicleSeat') then
						self.Character.PrimaryPart.CFrame = CFrame.new(j.CFrame * Vector3.new(0, 0, 0))
						repeat
							wait()
							j.TopSpeed.Value = Speed
							j.Turbo.Value = Turbo
						until self.Character.Sit == false
						j.TopSpeed.Value = Speed
						j.Turbo.Value = Turbo
					end
				end
			end
		end
	end
})

local Tab2 = CarHack:CollapsingHeader({
	Title = "Suspension"
})
Tab2:Label({
	Text = 'See a settings'
})
Tab2:Button({
	Text = 'Show',
	Callback = function()
		local W1 = ImGui:CreateModal({
			Title = "Suspension",
			AutoSize = "Y"
		})
		W1:Button({
			Text = "Remove",
			Callback = function()
				W1:Close()
			end,
		})
		for index, obj in pairs(workspace.Vehicles[self.Name..'Car'].Chassis.Platform:GetChildren()) do
			if string.find(obj.Name, 'Spring') then
				local car = workspace.Vehicles[self.Name..'Car'].Chassis.Platform
				local cyl = car['Cylindrical'..string.sub(obj.Name, string.len(obj.Name) - 1, string.len(obj.Name))]
				local at = car['Attachment'..string.sub(obj.Name, string.len(obj.Name) - 1, string.len(obj.Name))]
				W1:Label({
					Text = obj.Name
				})
				W1:Slider({
					Label = "Length",
					Value = obj.FreeLength,
					MinValue = 0,
					MaxValue = 30,
					ReadOnly = false,

					Callback = function(self2, Value)
						cyl.UpperLimit = Value + 300
						obj.Visible = true
						obj.MaxLength = Value + 100
						obj.FreeLength = Value
						obj.MinLength = 0
					end,
				})
				W1:Slider({
					Label = "Wheel Rotation",
					Value = cyl.InclinationAngle,
					MinValue = -90,
					MaxValue = 90,
					ReadOnly = false,

					Callback = function(self2, Value)
						cyl.InclinationAngle = Value
					end,
				})
				local Header = W1:CollapsingHeader({
					Title = "Position"
				})
				Header:Slider({
					Label = "X",
					Format = '%s',
					Value = at.Position.X,
					MinValue = -20,
					MaxValue = 20,
					ReadOnly = false,

					Callback = function(self2, Value)
						at.Position = Vector3.new(Value, at.Position.Y, at.Position.Z)
					end,
				})
				Header:Slider({
					Label = "Y",
					Format = '%s',
					Value = at.Position.Y,
					MinValue = -20,
					MaxValue = 20,
					ReadOnly = false,

					Callback = function(self2, Value)
						at.Position = Vector3.new(at.Position.X, Value, at.Position.Z)
					end,
				})
				Header:Slider({
					Label = "Z",
					Format = '%s',
					Value = at.Position.Z,
					MinValue = -20,
					MaxValue = 20,
					ReadOnly = false,

					Callback = function(self2, Value)
						at.Position = Vector3.new(at.Position.X, at.Position.Y, Value)
					end,
				})
			end
		end
	end
})
local v_1 = false
local character = self.Character
local PlrHack = Window:CreateTab({
	Name = "TROLL"
})
local PlrHack1 = PlrHack:CollapsingHeader({
	Title = "Player"
})
PlrHack1:Label({
	Text = 'Bring script'
})

PlrHack1:Button({
	Text = 'Select player',
	Callback = function()
		local W1 = ImGui:CreateModal({
			Title = "Selection",
			AutoSize = "Y"
		})
		W1:Button({
				Text = 'Decline',
				Callback = function()
					W1:Close()
				end
			})
		for i, v in pairs(game.Players:GetPlayers()) do
			if v ~= self then
				W1:Button({
				Text = v.Name..if v.Character.Humanoid.Sit then ' [Sitting]' else '',
				Callback = function()
					local hum = self.Character.Humanoid
					local v_3 = self.Character.PrimaryPart.CFrame
					self.Character.PrimaryPart.CFrame = workspace.WorkspaceCom["003_CouchGiveTool"].Main.CFrame
					hum:UnequipTools()
					local cart = game:GetService("Players").LocalPlayer.Backpack.Couch
					local occ = cart.Seat1
					local occ2 = cart.Seat2
					task.spawn(function()
						hum:EquipTool(cart)
						task.wait(0.1)
						repeat
							task.wait(0.05)
							hum:EquipTool(cart)
							local rootPart = character:FindFirstChild("HumanoidRootPart")
							self.Character.PrimaryPart.CFrame = CFrame.new(
								v.Character.PrimaryPart.CFrame.Position - Vector3.new(0, 3, 0)
								+ v.Character.PrimaryPart.CFrame.LookVector * 2 -- Move backward
							)

							if hum.Health == 0 then
								break
							end
						until occ.Occupant ~= nil or occ2.Occupant ~= nil
						task.wait()
						self.Character.PrimaryPart.CFrame = v_3
						task.spawn(function()
							self.Character.PrimaryPart.CFrame = v_3
							--hum.Health = 0
							task.wait(1)
							self.Character.PrimaryPart.CFrame = v_3
							hum:UnequipTools()
						end)
						
					end)
					W1:Close()
				end,
			})
			end
		end
	end
})

PlrHack1:Label({
	Text = 'Kill script'
})

PlrHack1:Button({
	Text = 'Select player',
	Callback = function()
		local W1 = ImGui:CreateModal({
			Title = "Selection",
			AutoSize = "Y"
		})
		W1:Button({
				Text = 'Decline',
				Callback = function()
					W1:Close()
				end
			})
		for i, v in pairs(game.Players:GetPlayers()) do
			if v ~= self then
				W1:Button({
				Text = v.Name..if v.Character.Humanoid.Sit then ' [Sitting]' else '',
				Callback = function()
					local v_4 = self.Character.PrimaryPart.CFrame
					self.Character.PrimaryPart.CFrame = CFrame.new(Vector3.new(0, 99999, 0))
					local hum = self.Character.Humanoid
					local v_3 = self.Character.PrimaryPart.CFrame
					self.Character.PrimaryPart.CFrame = workspace.WorkspaceCom["003_CouchGiveTool"].Main.CFrame
					hum:UnequipTools()
					local cart = game:GetService("Players").LocalPlayer.Backpack.Couch
					local occ = cart.Seat1
					local occ2 = cart.Seat2
					task.spawn(function()
						hum:EquipTool(cart)
						task.wait(0.1)
						repeat
							task.wait(0.05)
							hum:EquipTool(cart)
						self.Character.PrimaryPart.CFrame = CFrame.new(
								v.Character.PrimaryPart.CFrame.Position - Vector3.new(0, 3, 0)
								+ v.Character.PrimaryPart.CFrame.LookVector * 2 -- Move backward
							)

							if hum.Health == 0 then
								break
							end
						until occ.Occupant ~= nil or occ2.Occupant ~= nil
						self.Character.PrimaryPart.CFrame = v_3
						task.spawn(function()
							self.Character.PrimaryPart.CFrame = v_3
							task.wait(2)
							self.Character.PrimaryPart.CFrame = v_3
							hum.Health = 0
						end)
						task.wait(3)
						self.Character.PrimaryPart.CFrame = v_4
						
					end)
					W1:Close()
				end,
			})
			end
		end
	end
})

PlrHack1:Label({
	Text = 'Attach to player'
})
local attached = false
local at_plr = nil
PlrHack1:Button({
	Text = 'Select player',
	Callback = function()
		local W1 = ImGui:CreateModal({
			Title = "Selection",
			AutoSize = "Y"
		})
		W1:Button({
				Text = 'Decline',
				Callback = function()
					W1:Close()
				end
			})
		for i, v in pairs(game.Players:GetPlayers()) do
			if v ~= self then
				W1:Button({
				Text = v.Name..if v.Character.Humanoid.Sit then ' [Sitting]' else '',
				Callback = function()
				if attached and at_plr ~= nil then
					W1:Close()
					attached = false
					at_plr = nil
				else
					attached = not attached
					at_plr = v	
					W1:Close()
				end
				end,
			})
			end
		end
	end
})

PlrHack1:Label({
	Text = 'Teleport to player'
})
PlrHack1:Button({
	Text = 'Select player',
	Callback = function()
		local W1 = ImGui:CreateModal({
			Title = "Selection",
			AutoSize = "Y"
		})
		W1:Button({
				Text = 'Decline',
				Callback = function()
					W1:Close()
				end
			})
		for i, v in pairs(game.Players:GetPlayers()) do
			if v ~= self then
				W1:Button({
				Text = v.Name..if v.Character.Humanoid.Sit then ' [Sitting]' else '',
				Callback = function()
					self.Character.PrimaryPart.CFrame = v.Character.PrimaryPart.CFrame
					W1:Close()
				end,
			})
			end
		end
	end
})
PlrHack1:Label({
	Text = 'Invisible'
})
local invis = false
local function size(value)
	local args = {
		[1] = "CharacterSizeUp",
		[2] = value
	}

	game:GetService("ReplicatedStorage").RE["1Clothe1s"]:FireServer(unpack(args))
end
local mt1 = PlrHack1:CollapsingHeader({
	Title = 'Invis Method1'
})
mt1:Button({
	Text = 'Invisible',
	Callback = function()
		size(3)
		wait(0.3)
		game.Players.LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(2, 6, 2)
		game.Players.LocalPlayer.Character.HumanoidRootPart.Transparency = 0.8
		game.Players.LocalPlayer.Character.HumanoidRootPart.Material = Enum.Material.Rubber
		wait(0.8)
		game.Players.LocalPlayer.Character.UpperTorso.CanCollide = false
		game.Players.LocalPlayer.Character.LowerTorso.CanCollide = false
	end
})
mt1:Button({
	Text = 'Visible',
	Callback = function()
		size(1)
		wait(0.3)
		game.Players.LocalPlayer.Character.UpperTorso.CanCollide = true
		game.Players.LocalPlayer.Character.LowerTorso.CanCollide = true
	end
})
local mt2 = PlrHack1:CollapsingHeader({
	Title = 'Invis Method2'
})
local mt3 = PlrHack1:CollapsingHeader({
	Title = 'Custom Bundle'
})
local mt4 = PlrHack1:CollapsingHeader({
	Title = 'Custom Accessory'
})

local Input1 = mt3:InputText({
	Label = "ID",
	PlaceHolder = "Enter here",
	Value = "",
})
local Input2 = mt4:InputText({
	Label = "ID",
	PlaceHolder = "Enter here",
	Value = "",
})

mt3:Combo({
	Placeholder = "Select replacemt",
	Label = "BodyPart",
	Items = {
		["Torso"] = 1,
        ["LeftArm"] = 3,
		["RightArm"] = 2,
		["Head"] = 6,
        ["RightLeg"] = 4,
        ["LeftLeg"] = 5
	},
	Callback = function(self, Value)
		Select = Value
	end,
})
local Tabble = {
    [1] = 0,
    [2] = 0,
    [3] = 0,
    [4] = 0,
    [5] = 0,
    [6] = 0
}
mt3:Button({
	Text = 'Equip',
	Callback = function()
        Tabble[Select] = tonumber(Input1:GetValue())
	Tabble[6] = 1
		local args = {
            [1] = "CharacterChange",
            [2] = Tabble,
            [3] = "CoolKid"
        }

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt4:Button({
	Text = 'Equip',
	Callback = function()
       local args = {
            [1] = "wear",
            [2] = Input2:GetValue()
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'NoBundle',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = "15312911732",
				[2] = "14532583477",
				[3] = "14532583469",
				[4] = "14532583517",
				[5] = "14532583483",
				[6] = "134082579"
			},
			[3] = "Gaze"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'NoHead',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = "0",
				[2] = "0",
				[3] = "0",
				[4] = "0",
				[5] = "0",
				[6] = "134082579"
			},
			[3] = "Gaze"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'NoRightArmBundle',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = "0",
				[2] = "14532583477",
				[3] = "0",
				[4] = "0",
				[5] = "0",
				[6] = "0"
			},
			[3] = "Gaze"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'NoLeftArmBundle',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = "0",
				[2] = "0",
				[3] = "14532583469",
				[4] = "0",
				[5] = "0",
				[6] = "0"
			},
			[3] = "Gaze"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'NoLegsBundle',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = "0",
				[2] = "0",
				[3] = "0",
				[4] = "14532583517",
				[5] = "14532583483",
				[6] = "0"
			},
			[3] = "Gaze"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

	end
})
mt2:Button({
	Text = 'ManBundle',
	Callback = function()
		local args = {
			[1] = "CharacterChange",
			[2] = {
				[1] = 86500008,
				[2] = 86500036,
				[3] = 86500054,
				[4] = 86500078,
				[5] = 86500064,
				[6] = 86498048
			},
			[3] = "Man"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))


	end
})
local ph1 = PlrHack1:CollapsingHeader({
	Title = 'Sign troll'
})
ph1:Label({
	Text = 'Allah mode'
})
ph1:Button({
	Text = "Do a billboard",
	Callback = function()
		local function clearTools()
			local args = {
				[1] = "ClearAllTools"
			}

			game:GetService("ReplicatedStorage").RE["1Clea1rTool1s"]:FireServer(unpack(args))
		end
		local function equipTools()
			for _, tool in ipairs(self.Backpack:GetChildren()) do
				if tool:IsA("Tool") then
					tool.Parent = character
				end
			end
		end
		local character = self.Character
		local hum = character.Humanoid
		local boxes = workspace.WorkspaceCom["001_GiveTools"].SignRed
		local pos = character.PrimaryPart.CFrame 
		local attempts = 0 
		clearTools()
		while attempts < 4 do
			-- Увеличиваем количество попыток
			attempts += 1

			-- Перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes.CFrame

			-- Активируем ClickDetector
			fireclickdetector(boxes.ClickDetector)
			task.wait(1)

			-- Делаем инструмент доступным для сброса
			local tool = character:FindFirstChildOfClass('Tool')
			if tool then
				tool.CanBeDropped = true
			end
			-- Ожидаем, пока инструмент не будет сброшен
			repeat
				task.wait()
			until not character:FindFirstChildOfClass('Tool')
		end
		hum:UnequipTools()
		task.wait(0.2)
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA('Tool') and v.Name == 'SignRed' then
				v.Parent = self.Backpack
			end
		end
		hum:UnequipTools()
		task.wait(0.1)
		local grips = {
			{CFrame.new(-2, 0, 0), '       Al'},
			{CFrame.new(0, 0, 0), 'lAh     s'},
			{CFrame.new(2, 0, 0), 'i         he'},
			{CFrame.new(4, 0, 0), 're    '},
		} 
		local offset = 2 
		local baseOffset = -offset * (#self.Backpack:GetChildren() - 1) / 2 

		for i, tool in pairs(self.Backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Grip = grips[i][1]
				tool.ToolSound:FireServer('SignRed', "SignWords", grips[i][2])
			end
		end
		task.wait(1)
		character.PrimaryPart.CFrame = pos
		hum:UnequipTools()
		equipTools()
	end
})
local switch = 1
ph1:Checkbox({
	Label = "Enabled",
	Value = false,
	Callback = function(__,v)
		local grips = {
			{CFrame.new(-2, 0, 0), '       Al', 'You'},
			{CFrame.new(0, 0, 0), 'lAh     s', 'Got'},
			{CFrame.new(2, 0, 0), 'i         he', 'Raided'},
			{CFrame.new(4, 0, 0), 're    ', 'Now'},
		}

		local switch = 1
	
		task.spawn(function()
			while wait(1) do
				if v then
				-- Define Arabic characters
				local arabicLetters = {
				    "ا", "ب", "ت", "ث", "ج", "ح", "خ", "د", "ذ", "ر", "ز", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ك", "ل", "م", "ن", "ه", "و", "ي"
				}
				
				-- Function to generate a random Arabic word
				local function generateRandomArabicWord(length)
				    local word = ""
				    for i = 1, length do
				        local randomIndex = math.random(1, #arabicLetters)
				        word = word .. arabicLetters[randomIndex]
				    end
				    return word
				end
				
				-- Example usage
				local wordLength = 5  -- Change this to the desired word length
				local randomWord = generateRandomArabicWord(wordLength)
				if v then
					local args = {
						[1] = "RolePlayName",
						[2] = randomWord
					}
					
					game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))
				end
				end
				end
		end)

	end
})
PlrHack1:Button({
	Text = 'Trollface Gun',
	Callback = function()
		local args = {
		    [1] = "RequestingGunSkins",
		    [2] = "13298102229"
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

	end
})
local ph2 = PlrHack1:CollapsingHeader({
	Title = 'Effects'
})

ph2:Button({
	Text = 'Fire1',
	Callback = function()
		local args = {
		    [1] = "wear",
		    [2] = 132809431
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
	end
})
ph2:Button({
	Text = 'Fire2',
	Callback = function()
		local args = {
			[1] = "wear",
			[2] = 183468963
		}

		game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

	end
})
ph2:Button({
	Text = 'Fire3',
	Callback = function()
        local args = {
            [1] = "wear",
            [2] = 191101707
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

	end
})
ph2:Button({
	Text = 'Sparkle1',
	Callback = function()
		local args = {
            [1] = "wear",
            [2] = 192557913
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

	end
})
ph2:Button({
	Text = 'Sparkle2',
	Callback = function()
        local args = {
            [1] = "wear",
            [2] = 173624651
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

	end
})
local PlrHack2 = PlrHack:CollapsingHeader({
	Title = "Item"
})

PlrHack2:Button({
	Text = 'B1gD1ck',
	Callback = function()
		local function clearTools()
			local args = {
				[1] = "ClearAllTools"
			}

			game:GetService("ReplicatedStorage").RE["1Clea1rTool1s"]:FireServer(unpack(args))
		end
		local function grab(item)
			local args = {
				[1] = "AcceptedToolToServer",
				[2] = item,
				[3] = game:GetService("Players").LocalPlayer
			}

			game:GetService("ReplicatedStorage").RE["1Playe1rTrigge1rEven1t"]:FireServer(unpack(args))
		end
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		-- Function to equip up to 5 tools from the backpack
		local function equipTools()
			local equippedCount = 0

			-- Iterate through the tools in the backpack
			for _, tool in ipairs(backpack:GetChildren()) do
				if tool:IsA("Tool") then
					-- Move the tool to the character and equip it
					tool.Parent = character
					equippedCount += 1

					-- Stop after equipping 5 tools
					if equippedCount >= 5 then
						break
					end
				end
			end
		end

		local function progress(value)
			PB:SetPercentage(value % 100)
		end
		local character = self.Character
		local hum = character.Humanoid
		local boxes = workspace.WorkspaceCom["001_GiveTools"].Box
		local pos = character.PrimaryPart.CFrame 
		local attempts = 0 -- Количество попыток
		clearTools()
		while attempts < 5 do
			-- Увеличиваем количество попыток
			attempts += 1

			-- Делаем паузу 5 раз
			for i = 1, 5 do
				task.wait()
			end

			-- Перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes.CFrame

			-- Активируем ClickDetector
			fireclickdetector(boxes.ClickDetector)
			task.wait(0.1)

			-- Делаем инструмент доступным для сброса
			local tool = character:FindFirstChildOfClass('Tool')
			if tool then
				tool.CanBeDropped = true
			end
			-- Ожидаем, пока инструмент не будет сброшен
			repeat
				task.wait()
			until not character:FindFirstChildOfClass('Tool')

			task.wait(0.3)

			-- Снова перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes.CFrame
			fireclickdetector(boxes.ClickDetector)
		end
		hum:UnequipTools()
		task.wait(0.2)
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA('Tool') and v.Name == 'Box' then
				v.Parent = self.Backpack
			end
		end
		hum:UnequipTools()
		task.wait(0.1)
		for i, tool in pairs(self.Backpack:GetChildren()) do
			warn(i)
			local grips = {
				CFrame.new(-0.6, 0.7, -0.15) * CFrame.Angles(math.rad(-21.5), math.rad(-21.5), math.rad(-30)),
				CFrame.new(-0.6, 0.7, 1.6) * CFrame.Angles(math.rad(-21.5), math.rad(-21.5), math.rad(-30)),
				CFrame.new(-2.3, 0.7, 0.55) * CFrame.Angles(math.rad(-21.5), math.rad(-21.5), math.rad(-30)),
				CFrame.new(-4.1, 0.7, 0.55) * CFrame.Angles(math.rad(-21.5), math.rad(-21.5), math.rad(-30)),
				CFrame.new(-5.9, 0.7, 0.55) * CFrame.Angles(math.rad(-21.5), math.rad(-21.5), math.rad(-30)),
			}
			tool.Grip = grips[i]
		end
		task.wait(1)
		task.spawn(function()
			grab('FireX')
			wait(0.3)
			character.FireX.Grip = CFrame.new(0, 0, -1) * CFrame.Angles(math.rad(125), math.rad(210), math.rad(-90)) 

		end)
		task.wait(1)
		character.PrimaryPart.CFrame = pos
		hum:UnequipTools()
		equipTools()
		task.wait()
		equipTools()
		self.Backpack.FireX.Parent = character
	end
})
PlrHack2:Button({
	Text = 'Sm@allD1ck',
	Callback = function()
		local function clearTools()
			local args = {
				[1] = "ClearAllTools"
			}

			game:GetService("ReplicatedStorage").RE["1Clea1rTool1s"]:FireServer(unpack(args))
		end
		local function grab(item)
			local args = {
				[1] = "AcceptedToolToServer",
				[2] = item,
				[3] = game:GetService("Players").LocalPlayer
			}

			game:GetService("ReplicatedStorage").RE["1Playe1rTrigge1rEven1t"]:FireServer(unpack(args))
		end
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		-- Function to equip up to 5 tools from the backpack
		local function equipTools()
			local equippedCount = 0

			-- Iterate through the tools in the backpack
			for _, tool in ipairs(backpack:GetChildren()) do
				if tool:IsA("Tool") then
					-- Move the tool to the character and equip it
					tool.Parent = character
					equippedCount += 1

					-- Stop after equipping 5 tools
					if equippedCount >= 5 then
						break
					end
				end
			end
		end
		local function stopAllAnimations()
			local humanoid = character:FindFirstChildOfClass("Humanoid") -- Get the humanoid
			if humanoid then
				local animator = humanoid:FindFirstChildOfClass("Animator") -- Get the animator
				if animator then
					for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
						track:Stop() -- Stop the animation track
					end
				else
					warn("Animator not found in humanoid.")
				end
			else
				warn("Humanoid not found in character.")
			end
		end

		-- Call the function to stop all animations
		stopAllAnimations()

		local function progress(value)
			PB:SetPercentage(value % 100)
		end
		local character = self.Character
		local hum = character.Humanoid
		local boxes = workspace.WorkspaceCom["001_GiveTools"].Banana
		local boxes2 = workspace.WorkspaceCom["001_GiveTools"].Apple
		local pos = character.PrimaryPart.CFrame 
		local attempts = 0 -- Количество попыток
		clearTools()
		-- Перемещаем персонажа к объекту
		character.PrimaryPart.CFrame = boxes.CFrame - Vector3.new(0, 1, 0)
		fireclickdetector(boxes.ClickDetector)
		task.wait(1)
		hum:UnequipTools()
		task.wait(0.2)
		while attempts < 1 do
			-- Увеличиваем количество попыток
			attempts += 1

			-- Делаем паузу 5 раз
			for i = 1, 2 do
				task.wait()
			end

			-- Перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes2.CFrame -  Vector3.new(0, 2, 0)

			-- Активируем ClickDetector
			fireclickdetector(boxes2.ClickDetector)
			task.wait(1)

			-- Делаем инструмент доступным для сброса
			local tool = character:FindFirstChildOfClass('Tool')
			if tool then
				tool.CanBeDropped = true
			end
			-- Ожидаем, пока инструмент не будет сброшен
			repeat
				task.wait()
			until not character:FindFirstChildOfClass('Tool')

			task.wait(0.3)

			-- Снова перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes2.CFrame
			fireclickdetector(boxes2.ClickDetector)
		end
		hum:UnequipTools()
		task.wait(0.2)
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA('Tool') and v.Name == 'Apple' then
				v.Parent = self.Backpack
			end
		end
		hum:UnequipTools()
		self.Backpack.Banana.Parent = character
		character.Banana.Grip = CFrame.new(-1.4, -0.5, 0) * CFrame.Angles(math.rad(-25), math.rad(180), math.rad(0))
		task.wait(0.3)
		for i, tool in pairs(self.Backpack:GetChildren()) do
			warn(i)
			local grips = {
				CFrame.new(1.2, -0.1, 0) * CFrame.Angles(math.rad(-25), math.rad(180), math.rad(180)),
				CFrame.new(1.6, -0.1, 0) * CFrame.Angles(math.rad(-25), math.rad(180), math.rad(180))
			}
			tool.Grip = grips[i]
		end
		character.PrimaryPart.CFrame = pos
		hum:UnequipTools()
		task.wait()
		equipTools()
		task.wait(0.2)
		stopAllAnimations()
	end
})


--[[local PlrHack2P = PlrHack2:CollapsingHeader({
	Title = "Grip"
})
PlrHack2P:Button({
	Text = '-X',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip -= Vector3.new(0.1, 0, 0)
	end
})
PlrHack2P:Button({
	Text = '-Y',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip -= Vector3.new(0, 0.1, 0)
	end
})
PlrHack2P:Button({
	Text = '-Z',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip -= Vector3.new(0, 0, 0.1)
	end
})

PlrHack2P:Button({
	Text = '+X',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip += Vector3.new(0.1, 0, 0)
	end
})
PlrHack2P:Button({
	Text = '+Y',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip += Vector3.new(0, 0.1, 0)
	end
})
PlrHack2P:Button({
	Text = '+Z',
	Callback = function()
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		character:FindFirstChildOfClass('Tool').Grip += Vector3.new(0, 0, 0.1)
	end
})]]
local P4 = PlrHack2:CollapsingHeader({
	Title = "Creepy Sound"
})
P4:Button({
	Text = 'Dupe FireX',
	Callback = function()
		local function clearTools()
			local args = {
				[1] = "ClearAllTools"
			}

			game:GetService("ReplicatedStorage").RE["1Clea1rTool1s"]:FireServer(unpack(args))
		end
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack
		local function equipTools()
			for _, tool in ipairs(backpack:GetChildren()) do
				if tool:IsA("Tool") then
					tool.Parent = character
				end
			end
		end
		local character = self.Character
		local hum = character.Humanoid
		local boxes = workspace.WorkspaceCom["001_GiveTools"].FireX
		local pos = character.PrimaryPart.CFrame 
		local attempts = 0 -- Количество попыток
		clearTools()
		hum:UnequipTools()
		task.wait(0.2)
		while attempts < 11 do
			-- Увеличиваем количество попыток
			attempts += 1

			-- Делаем паузу 5 раз
			for i = 1, 2 do
				task.wait()
			end

			-- Перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes.CFrame

			-- Активируем ClickDetector
			local tool = character:FindFirstChildOfClass('Tool')
			if tool then
				tool.CanBeDropped = true
			end
			fireclickdetector(boxes.ClickDetector)
			task.wait(0.3)

			-- Делаем инструмент доступным для сброса
			local tool = character:FindFirstChildOfClass('Tool')
			if tool then
				tool.CanBeDropped = true
			end
			-- Ожидаем, пока инструмент не будет сброшен
			repeat
				task.wait()
			until not character:FindFirstChildOfClass('Tool')

			task.wait(0.3)

			-- Снова перемещаем персонажа к объекту
			character.PrimaryPart.CFrame = boxes.CFrame
			fireclickdetector(boxes.ClickDetector)
		end
		hum:UnequipTools()
		task.wait(0.2)
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA('Tool') and v.Name == 'FireX' then
				v.Grip = CFrame.new(0, 0, -6) * CFrame.Angles(math.rad(90), 0, 0)
				task.wait(0.01)
				v.Parent = self.Backpack
			end
		end
		hum:UnequipTools()
		character.PrimaryPart.CFrame = pos
		task.wait(0.2)
		equipTools()
		task.wait(0.2)
	end
})
local c = "On" -- Начальное состояние
P4:Checkbox({
	Label = "Enabled",
	Value = false,
	Callback = function(s, value)
		if value then
			character.Humanoid:UnequipTools()
			local function equipTools()
				for _, tool in ipairs(self.Backpack:GetChildren()) do
					if tool:IsA("Tool") and tool.Name == 'FireX' then
						tool.Grip = CFrame.new(0, 0, -6) * CFrame.Angles(math.rad(90), 0, 0)
						wait(0.01)
						tool.Parent = character
					end
				end
			end
			equipTools()
			local backpack = game.Players.LocalPlayer.Character
			task.spawn(function()
				while wait() do
					if value then
						local delay = 0.01 -- Начальная задержка
						local delayIncrement = 0.001 -- Увеличение задержки для каждого FireX

						for _, tool in pairs(backpack:GetChildren()) do
							if tool.Name == "FireX" then
									wait(delay) -- Индивидуальная задержка для текущего FireX
									
									if c == "On" then
										c = "Off"
										tool.ToolSound:FireServer("FireX", "Off")
									else
										c = "On"
										tool.ToolSound:FireServer("FireX", "On")
									end
								
								delay += delayIncrement -- Увеличиваем задержку для следующего FireX
							end
						end
					--[[else
						for _, tool in pairs(backpack:GetChildren()) do
							if tool.Name == "FireX" then
								tool.ToolSound:FireServer("FireX", "Off")
							end
						end]]
					end
				end
			end)

		end
	end
})
PlrHack2:Button({
	Text = 'Equip Tools',
	Callback = function()
		local function clearTools()
			local args = {
				[1] = "ClearAllTools"
			}

			game:GetService("ReplicatedStorage").RE["1Clea1rTool1s"]:FireServer(unpack(args))
		end
		local function grab(item)
			local args = {
				[1] = "AcceptedToolToServer",
				[2] = item,
				[3] = game:GetService("Players").LocalPlayer
			}

			game:GetService("ReplicatedStorage").RE["1Playe1rTrigge1rEven1t"]:FireServer(unpack(args))
		end
		local player = game.Players.LocalPlayer -- Get the local player
		local character = player.Character or player.CharacterAdded:Wait() -- Ensure character exists
		local backpack = player:WaitForChild("Backpack") -- Get the Backpack

		-- Function to equip up to 5 tools from the backpack
		local function equipTools()

			-- Iterate through the tools in the backpack
			for _, tool in ipairs(backpack:GetChildren()) do
				if tool:IsA("Tool") then
					-- Move the tool to the character and equip it
					tool.Parent = character
				end
			end
		end
		local function stopAllAnimations()
			local humanoid = character:FindFirstChildOfClass("Humanoid") -- Get the humanoid
			if humanoid then
				local animator = humanoid:FindFirstChildOfClass("Animator") -- Get the animator
				if animator then
					for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
						track:Stop() -- Stop the animation track
					end
				else
					warn("Animator not found in humanoid.")
				end
			else
				warn("Humanoid not found in character.")
			end
		end

		-- Call the function to stop all animations
		
		character.Humanoid:UnequipTools()
		wait(0.3)
		equipTools()
		wait(0.6)
		stopAllAnimations()
	end
})
local PlrHack3 = PlrHack:CollapsingHeader({
	Title = "House"
})
local v_5 = false
PlrHack3:Checkbox({
	Label = "Remove all house-ban",
	Value = false,
	Callback = function(s, value)
		v_5 = value
	end
})
coroutine.wrap(function()
	while true do
	task.wait()
		if v_5 then
			for i, v in pairs(workspace["001_Lots"]:GetChildren()) do
				if string.find(v.Name, "House") then
					local houseModel = v:FindFirstChild("HousePickedByPlayer") and v.HousePickedByPlayer:FindFirstChild("HouseModel")
					if houseModel then
						-- Ищем все объекты, содержащие "Banned" в имени
						for _, bannedObject in pairs(houseModel:GetChildren()) do
							if string.find(bannedObject.Name, "Banned") then
								bannedObject:Destroy() -- Удаляем объект
							end
						end
					end
				end
			end
		end
		if attached then
			task.spawn(function()
				self.Character.PrimaryPart.CFrame = at_plr.Character.PrimaryPart.CFrame
			end)
		end
	end
end)() 
local sound = function()
	if Player.Character:FindFirstChild('sss') then
		local audio = Player.Character.sss
		audio.SoundId = 'rbxassetid://87440193768707'
		audio:Play()
	else
		local audio = Instance.new("Sound", Player.Character)
		audio.SoundId = 'rbxassetid://87440193768707'
		audio:Play()
		audio.Name ='sss'
	end

end
local notification = function(text)
	local ModalWindow = ImGui:CreateModal({ --// Returns a Tab class
		Title = "Success",
		AutoSize = "Y"
	})

	ModalWindow:Label({
		Text = text
	})

	ModalWindow:Button({
		Text = "Confirm",
		Callback = function()
			ModalWindow:Close()
		end,
	})
	sound()
end
notification('Connected | Author : HOKJHa, Version: 5')
